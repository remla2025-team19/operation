---
- hosts: all
  become: true
  tasks:
    # Step 13
    - name: Check if Kubernetes admin.conf already exists
      ansible.builtin.stat:
        path: /etc/kubernetes/admin.conf
      register: kubeadmin_conf_stat

    - name: Initialize the Kubernetes cluster using kubeadm
      ansible.builtin.command:
        argv:
          - kubeadm
          - init
          - --apiserver-advertise-address=192.168.56.100 
          - --node-name
          - ctrl
          - --pod-network-cidr=10.244.0.0/16 
          - --ignore-preflight-errors=NumCPU  # ignore min 2 cpu error
        creates: /etc/kubernetes/admin.conf
      when: not kubeadmin_conf_stat.stat.exists
      changed_when: true

    # Step 14: Setup kubectl
    - name: Create .kube directory for vagrant user
      ansible.builtin.file:
        path: /home/vagrant/.kube
        state: directory
        owner: vagrant
        group: vagrant
        mode: '0755'

    - name: Copy admin.conf to vagrant user's .kube/config
      ansible.builtin.copy:
        src: /etc/kubernetes/admin.conf
        dest: /home/vagrant/.kube/config
        remote_src: yes
        owner: vagrant
        group: vagrant
        mode: '0600'

    - name: Ensure kube directory exists on host
      ansible.builtin.file:
        path: "{{ playbook_dir }}/../kube"
        state: directory
        mode: '0755'
      delegate_to: localhost
      become: false
      run_once: true

    - name: Fetch admin.conf from VM to host
      ansible.builtin.fetch:
        src: /etc/kubernetes/admin.conf
        dest: "{{ playbook_dir }}/../kube/admin.conf"
        flat: yes
      become: true

    # Step 15: Create Pod network
    - name: Copy flannel config to the VM
      ansible.builtin.copy:
        src: "{{ playbook_dir }}/kube-flannel.yml"
        dest: /home/vagrant/kube-flannel.yml
        owner: vagrant
        group: vagrant
        mode: '0644'

    - name: Check if flannel is already deployed
      ansible.builtin.command:
        cmd: kubectl get namespace kube-flannel
      register: flannel_check
      ignore_errors: true
      changed_when: false
      become: false
      become_user: vagrant
      environment:
        KUBECONFIG: /home/vagrant/.kube/config

    - name: Apply flannel network configuration
      ansible.builtin.command:
        cmd: kubectl apply -f /home/vagrant/kube-flannel.yml
      when: flannel_check.rc != 0
      become: false
      become_user: vagrant
      environment:
        KUBECONFIG: /home/vagrant/.kube/config
        
    # Step 16: Install Helm
    - name: Add Helm APT Key
      ansible.builtin.apt_key:
        url: https://baltocdn.com/helm/signing.asc
        state: present
      become: true
      
    - name: Install apt-transport-https
      ansible.builtin.apt:
        name: apt-transport-https
        state: present
      become: true
      
    - name: Add Helm repository
      ansible.builtin.apt_repository:
        repo: "deb https://baltocdn.com/helm/stable/debian/ all main"
        state: present
        filename: helm-stable-debian
      become: true
      
    - name: Update apt cache
      ansible.builtin.apt:
        update_cache: yes
      become: true
      
    - name: Install Helm
      ansible.builtin.apt:
        name: helm
        state: present
      become: true

    # Step 17: Install helm diff
    - name: Install helm diff
      ansible.builtin.shell:
        cmd: helm plugin install https://github.com/databus23/helm-diff
      become: false
      become_user: vagrant
